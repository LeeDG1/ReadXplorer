package de.cebitec.vamp.view.dataVisualisation.trackViewer;

/**
 *
 * @author ddoppmeier
 */
public class CoverageInfoPanel extends javax.swing.JPanel {

    private static final long serialVersionUID = 812385;

    /** Creates new form CoverageInfoPanel */
    public CoverageInfoPanel() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        zeroFwdField = new javax.swing.JTextField();
        zeroRevField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        bestMatchFwdField = new javax.swing.JTextField();
        bestMatchRevField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        nFwdField = new javax.swing.JTextField();
        nRevField = new javax.swing.JTextField();

        jLabel1.setText("Strand:");

        jTextField1.setEditable(false);
        jTextField1.setText("fwd");
        jTextField1.setToolTipText("forward strand");

        jTextField2.setEditable(false);
        jTextField2.setText("rev");
        jTextField2.setToolTipText("reverse strand");

        jLabel2.setText("Perfect cov.:");
        jLabel2.setToolTipText("Number of perfect matches");

        zeroFwdField.setEditable(false);
        zeroFwdField.setToolTipText("");

        zeroRevField.setEditable(false);
        zeroRevField.setToolTipText("");

        jLabel3.setText("Best-Match cov.:");
        jLabel3.setToolTipText("<html>Number of matches<br>that are optimal for their related read");

        bestMatchFwdField.setEditable(false);
        bestMatchFwdField.setToolTipText("");

        bestMatchRevField.setEditable(false);
        bestMatchRevField.setToolTipText("");

        jLabel4.setText("Complete cov.:");
        jLabel4.setToolTipText("Complete number of matches");

        nFwdField.setEditable(false);
        nFwdField.setToolTipText("");

        nRevField.setEditable(false);
        nRevField.setToolTipText("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(nFwdField, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(bestMatchFwdField, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(zeroFwdField)
                    .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(nRevField)
                    .addComponent(bestMatchRevField)
                    .addComponent(zeroRevField)
                    .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(zeroFwdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(zeroRevField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(bestMatchFwdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bestMatchRevField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(nFwdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nRevField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField bestMatchFwdField;
    private javax.swing.JTextField bestMatchRevField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField nFwdField;
    private javax.swing.JTextField nRevField;
    private javax.swing.JTextField zeroFwdField;
    private javax.swing.JTextField zeroRevField;
    // End of variables declaration//GEN-END:variables

    public void setZeroFwd(int count){
        if(count >= 0){
            zeroFwdField.setText(String.valueOf(count));
        } else {
            zeroFwdField.setText("");
        }
    }

    public void setZeroRev(int count){
        if(count >= 0){
            zeroRevField.setText(String.valueOf(count));
        } else {
            zeroRevField.setText("");
        }
    }

    public void setBmFwd(int count){
        if(count >= 0){
            bestMatchFwdField.setText(String.valueOf(count));
        } else {
            bestMatchFwdField.setText("");
        }
    }

    public void setBmRev(int count){
        if(count >= 0){
            bestMatchRevField.setText(String.valueOf(count));
        } else {
            bestMatchRevField.setText("");
        }
    }

    public void setNFwd(int count){
        if(count >= 0){
            nFwdField.setText(String.valueOf(count));
        } else {
            nFwdField.setText("");
        }
    }

    public void setNRev(int count){
        if(count >= 0){
            nRevField.setText(String.valueOf(count));
        } else {
            nRevField.setText("");
        }
    }


}
