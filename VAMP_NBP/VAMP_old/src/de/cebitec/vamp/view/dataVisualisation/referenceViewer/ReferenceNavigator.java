package de.cebitec.vamp.view.dataVisualisation.referenceViewer;

import java.util.logging.Level;
import java.util.logging.Logger;
import de.cebitec.vamp.databackend.dataObjects.PersistantReference;
import de.cebitec.vamp.view.dataVisualisation.BoundsInfoManager;
import de.cebitec.vamp.view.dataVisualisation.basePanel.AbstractInfoPanel;

/**
 *
 * @author ddoppmeier
 */
public class ReferenceNavigator extends AbstractInfoPanel {

    private final static long serialVersionUID = 294732;

    /** Creates new form GvNavigator */
    public ReferenceNavigator() {
        initComponents();
        Logger.getLogger(this.getClass().getName()).log(Level.SEVERE, "Do not use empty Constructor for this object! Standard constructor is only meant for GUI builder means");
    }

    public ReferenceNavigator(PersistantReference refGen, BoundsInfoManager boundsManager, ReferenceViewer viewer){
        initComponents();
        jumpPanel1.setReferenceGenome(refGen);
        jumpPanel1.setBoundsInfoManager(boundsManager);
        codonSelector1.setGenomeViewer(viewer);

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jumpPanel1 = new de.cebitec.vamp.view.dataVisualisation.referenceViewer.JumpPanel();
        codonSelector1 = new de.cebitec.vamp.view.dataVisualisation.referenceViewer.CodonSelector();

        setMaximumSize(new java.awt.Dimension(36000, 36000));
        setMinimumSize(new java.awt.Dimension(228, 304));
        setOpaque(false);
        setPreferredSize(new java.awt.Dimension(228, 304));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jumpPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE)
            .addComponent(codonSelector1, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jumpPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(codonSelector1, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents




    // Variables declaration - do not modify//GEN-BEGIN:variables
    private de.cebitec.vamp.view.dataVisualisation.referenceViewer.CodonSelector codonSelector1;
    private de.cebitec.vamp.view.dataVisualisation.referenceViewer.JumpPanel jumpPanel1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void close() {

    }

    @Override
    public void setCurrentMousePosition(int logPos) {

    }

    @Override
    public void setMouseOverPaintingRequested(boolean requested) {

    }


}
