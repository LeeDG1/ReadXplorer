package de.cebitec.vamp.view.dataVisualisation.trackViewer;

import de.cebitec.vamp.databackend.connector.TrackConnector;
import de.cebitec.vamp.databackend.dataObjects.PersistantTrack;
import de.cebitec.vamp.view.dataVisualisation.BoundsInfoManager;
import de.cebitec.vamp.view.dataVisualisation.basePanel.AbstractInfoPanel;
import de.cebitec.vamp.view.dataVisualisation.basePanel.BasePanelFactory;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author ddoppmeier
 */
public class TrackNavigatorPanel extends AbstractInfoPanel {

    private static final long serialVersionUID = 246773653;
    private TrackConnector trackCon;
    private BasePanelFactory basePanelFactory;
    private PersistantTrack track;
    private BoundsInfoManager boundsManager;

    /** Creates new form TrackNavigatorPanel */
    public TrackNavigatorPanel() {
        initComponents();
        Logger.getLogger(this.getClass().getName()).log(Level.SEVERE, "Do not use empty Constructor for this object! Standard constructor is only meant for GUI builder means");

    }

    public TrackNavigatorPanel(TrackConnector trackC, BasePanelFactory basePanelFactory, PersistantTrack track, BoundsInfoManager boundsManager){
        this.track = track;
        this.basePanelFactory = basePanelFactory;
        this.trackCon = trackC;
        this.boundsManager = boundsManager;

        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        statisticsTab = new javax.swing.JTabbedPane();
        trackStatisticsPanel1 = new de.cebitec.vamp.view.dataVisualisation.trackViewer.TrackStatisticsPanel(trackCon);
        trackOptionsPanel2 = new de.cebitec.vamp.view.dataVisualisation.trackViewer.TrackOptionsPanel(basePanelFactory, track, boundsManager);

        setMinimumSize(new java.awt.Dimension(0, 0));
        setPreferredSize(new java.awt.Dimension(211, 250));

        statisticsTab.setMinimumSize(new java.awt.Dimension(154, 206));

        trackStatisticsPanel1.setBorder(null);
        trackStatisticsPanel1.setPreferredSize(new java.awt.Dimension(191, 304));
        statisticsTab.addTab("Statistics", trackStatisticsPanel1);
        statisticsTab.addTab("Tools", trackOptionsPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(statisticsTab, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(statisticsTab, javax.swing.GroupLayout.DEFAULT_SIZE, 303, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane statisticsTab;
    private de.cebitec.vamp.view.dataVisualisation.trackViewer.TrackOptionsPanel trackOptionsPanel2;
    private de.cebitec.vamp.view.dataVisualisation.trackViewer.TrackStatisticsPanel trackStatisticsPanel1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void close() {
        basePanelFactory = null;
        track = null;
        trackCon = null;
        trackOptionsPanel2.close();
        this.remove(trackOptionsPanel2);
        trackOptionsPanel2 = null;
        trackStatisticsPanel1.close();
        this.remove(trackStatisticsPanel1);
        trackStatisticsPanel1 = null;
        this.remove(statisticsTab);
        statisticsTab = null;
    }

    @Override
    public void setCurrentMousePosition(int logPos) {

    }

    @Override
    public void setMouseOverPaintingRequested(boolean requested) {

    }

}
