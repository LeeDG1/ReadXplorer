/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package de.cebitec.vamp.options;

import org.openide.util.NbPreferences;
import de.cebitec.vamp.util.GeneticCodesStore;
import de.cebitec.vamp.util.Properties;

/**
 * @author Rolf Hilker
 *
 * Panel for choosing the genetic code to use. Meaning which start and stop codons
 * should be used.
 */
final class GeneticCodePanel extends javax.swing.JPanel {

    private final GeneticCodeOptionsPanelController controller;

    GeneticCodePanel(GeneticCodeOptionsPanelController controller) {
        this.controller = controller;
        this.initComponents();
        this.initChooseCodeComboBox();
        // TODO listen to changes in form fields and call controller.changed()
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chooseCodeLabel = new javax.swing.JLabel();
        chooseCodeComboBox = new javax.swing.JComboBox();

        org.openide.awt.Mnemonics.setLocalizedText(chooseCodeLabel, org.openide.util.NbBundle.getMessage(GeneticCodePanel.class, "GeneticCodePanel.chooseCodeLabel.text")); // NOI18N

        chooseCodeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseCodeComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(chooseCodeComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(chooseCodeLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(chooseCodeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chooseCodeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(79, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void chooseCodeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseCodeComboBoxActionPerformed
        //nothing to do here
    }//GEN-LAST:event_chooseCodeComboBoxActionPerformed

    void load() {
        // TODO read settings and initialize GUI
        // Example:        
        // someCheckBox.setSelected(Preferences.userNodeForPackage(GeneticCodePanel.class).getBoolean("someFlag", false));
        // or for org.openide.util with API spec. version >= 7.4:
        // someCheckBox.setSelected(NbPreferences.forModule(GeneticCodePanel.class).getBoolean("someFlag", false));
        // or:
        // someTextField.setText(SomeSystemOption.getDefault().getSomeStringProperty());
    }

    void store() {
        // store modified settings
        NbPreferences.forModule(Object.class).put(Properties.SEL_GENETIC_CODE, chooseCodeComboBox.getSelectedItem().toString());
    }

    boolean valid() {
        // TODO check whether form is consistent and complete
        return true;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox chooseCodeComboBox;
    private javax.swing.JLabel chooseCodeLabel;
    // End of variables declaration//GEN-END:variables

    /**
     * Creates the content of the combo box containing the genetic codes.
     */
    private void initChooseCodeComboBox() {
        final String[] identifiers = GeneticCodesStore.getGeneticCodeIdentifiers();
        for (int i=0; i<identifiers.length; ++i){
            this.chooseCodeComboBox.addItem(identifiers[i]);
        }
    }
}
