package de.cebitec.vamp.tools.rnaFolder;

import de.cebitec.vamp.tools.rnaFolder.rnamovies.MoviePane;
import de.cebitec.vamp.util.TabWithCloseX;
import java.util.logging.Logger;
import org.openide.util.NbBundle;
import org.openide.windows.TopComponent;
import org.openide.windows.WindowManager;
//import org.openide.util.ImageUtilities;
import org.netbeans.api.settings.ConvertAsProperties;

/**
 * Top component displaying a tabbed pane for visualizing folded RNAs (with the
 * aid of RNAFold and RNAMovies).
 */
@ConvertAsProperties(dtd = "-//de.cebitec.vamp.tools.rnaFolder//RNAFolder//EN",
autostore = false)
public final class RNAFolderTopComponent extends TopComponent {

    private static RNAFolderTopComponent instance;
    /** path to the icon used by the component and its open action */
//    static final String ICON_PATH = "SET/PATH/TO/ICON/HERE";
    private static final String PREFERRED_ID = "RNAFolderTopComponent";

    public RNAFolderTopComponent() {
        initComponents();
        this.setName(NbBundle.getBundle(RNAFolderController.class).getString("RNAFolderViewer.Name"));
        this.rnaTabbedPane.
        setName(NbBundle.getMessage(RNAFolderTopComponent.class, "CTL_RNAFolderTopComponent"));
        setToolTipText(NbBundle.getMessage(RNAFolderTopComponent.class, "HINT_RNAFolderTopComponent"));
//        setIcon(ImageUtilities.loadImage(ICON_PATH, true));

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rnaTabbedPane = new javax.swing.JTabbedPane();

        setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(rnaTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 396, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(rnaTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane rnaTabbedPane;
    // End of variables declaration//GEN-END:variables
    /**
     * Gets default instance. Do not use directly: reserved for *.settings files only,
     * i.e. deserialization routines; otherwise you could get a non-deserialized instance.
     * To obtain the singleton instance, use {@link #findInstance}.
     */
    public static synchronized RNAFolderTopComponent getDefault() {
        if (instance == null) {
            instance = new RNAFolderTopComponent();
        }
        return instance;
    }

    /**
     * Obtain the RNAFolderTopComponent instance. Never call {@link #getDefault} directly!
     */
    public static synchronized RNAFolderTopComponent findInstance() {
        TopComponent win = WindowManager.getDefault().findTopComponent(PREFERRED_ID);
        if (win == null) {
            Logger.getLogger(RNAFolderTopComponent.class.getName()).warning(
                    "Cannot find " + PREFERRED_ID + " component. It will not be located properly in the window system.");
            return getDefault();
        }
        if (win instanceof RNAFolderTopComponent) {
            return (RNAFolderTopComponent) win;
        }
        Logger.getLogger(RNAFolderTopComponent.class.getName()).warning(
                "There seem to be multiple components with the '" + PREFERRED_ID
                + "' ID. That is a potential source of errors and unexpected behavior.");
        return getDefault();
    }

    @Override
    public int getPersistenceType() {
        return TopComponent.PERSISTENCE_ALWAYS;
    }

    @Override
    public void componentOpened() {
        //Nothing to do right now
    }

    @Override
    public void componentClosed() {
        this.rnaTabbedPane.removeAll();
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    Object readProperties(java.util.Properties p) {
        if (instance == null) {
            instance = this;
        }
        instance.readPropertiesImpl(p);
        return instance;
    }

    private void readPropertiesImpl(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }

    @Override
    protected String preferredID() {
        return PREFERRED_ID;
    }

    /**
     * Adds a tab to the pane with the given tabHeader and sets the rnaMovie object into the tab.
     * @param rnaMovie the rnaMovie to be shown in the tab
     * @param tabHeader the name of the reference the folded sequence originates from
     */
    public void openRNAMovie(MoviePane rnaMovie, String tabHeader) {
        this.rnaTabbedPane.addTab(tabHeader, rnaMovie);
        this.rnaTabbedPane.setTabComponentAt(this.rnaTabbedPane.getTabCount()-1, new TabWithCloseX(this.rnaTabbedPane));
        this.rnaTabbedPane.setSelectedIndex(this.rnaTabbedPane.getTabCount()-1);
        this.open();
        this.requestActive();
        this.validate();
        rnaMovie.zoomFit();
    }
}
