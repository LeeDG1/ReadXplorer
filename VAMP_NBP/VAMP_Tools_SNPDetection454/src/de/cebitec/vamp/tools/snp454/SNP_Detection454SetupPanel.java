/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SNP_Detection454SetupPanel.java
 *
 * Created on 03.06.2011, 14:48:20
 */
package de.cebitec.vamp.tools.snp454;

import de.cebitec.centrallookup.CentralLookup;
import de.cebitec.vamp.api.objects.Snp;
import de.cebitec.vamp.databackend.connector.ITrackConnector;
import java.util.ArrayList;
import java.util.List;
import javax.swing.SwingWorker;
import org.netbeans.api.progress.ProgressHandle;
import org.netbeans.api.progress.ProgressHandleFactory;
import org.openide.DialogDisplayer;
import org.openide.NotifyDescriptor;
import org.openide.util.NbBundle;
import org.openide.util.RequestProcessor;
import org.openide.util.RequestProcessor.Task;
import org.openide.util.TaskListener;

/**
 *
 * @author msmith
 */
public class SNP_Detection454SetupPanel extends javax.swing.JPanel {
    
    
    private static final long serialVersionUID = 1L;
    private ITrackConnector con;
    private List<Snp> snps;
    
    public static final String PROP_SNPS_LOADED = "snpsLoaded";

    /** Creates new form SNP_Detection454SetupPanel */
    public SNP_Detection454SetupPanel() {
        initComponents();
        snps = new ArrayList<Snp>();
    }
    
    //TODO: nur dafuer da dass hier was angezeigt wird. ma noch selber zusammen bauen
    private class SnpWorker extends SwingWorker<List<Snp>, Object> {

        private int percent;
        private int num;
        private ProgressHandle ph;

        SnpWorker(int percent, int num) {
            this.percent = percent;
            this.num = num;
//            this.ph = ProgressHandleFactory.createHandle(NbBundle.getMessage(SnpWorker.class, "MSG_SNPWorker.progress.name"));
        }

        @Override
        protected List<Snp> doInBackground() {
            CentralLookup.getDefault().add(this);

  //          ph.start();

            //snps = con.findSNPs(percent, num);
            return snps;
        }

        @Override
        protected void done() {
            CentralLookup.getDefault().remove(this);

     //       ph.finish();
        }

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        perVar = new javax.swing.JSpinner();
        absNum = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();

        jTextField1.setText(org.openide.util.NbBundle.getMessage(SNP_Detection454SetupPanel.class, "SNP_Detection454SetupPanel.jTextField1.text")); // NOI18N
        jTextField1.setToolTipText(org.openide.util.NbBundle.getMessage(SNP_Detection454SetupPanel.class, "SNP_Detection454SetupPanel.jTextField1.toolTipText")); // NOI18N

        jLabel1.setText(org.openide.util.NbBundle.getMessage(SNP_Detection454SetupPanel.class, "SNP_Detection454SetupPanel.jLabel1.text")); // NOI18N

        jLabel2.setText(org.openide.util.NbBundle.getMessage(SNP_Detection454SetupPanel.class, "SNP_Detection454SetupPanel.jLabel2.text")); // NOI18N

        absNum.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        absNum.setText(org.openide.util.NbBundle.getMessage(SNP_Detection454SetupPanel.class, "SNP_Detection454SetupPanel.absNum.text")); // NOI18N

        searchButton.setText(org.openide.util.NbBundle.getMessage(SNP_Detection454SetupPanel.class, "SNP_Detection454SetupPanel.searchButton.text")); // NOI18N
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(absNum)
                            .addComponent(perVar, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)))
                    .addComponent(searchButton))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(perVar, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(absNum, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(searchButton))
                    .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        String absN = absNum.getText();
        if(isValidNumer(absN)){
            final int num = Integer.parseInt(absN);
            final int percent = (Integer) perVar.getValue();

            RequestProcessor rp = new RequestProcessor("SNP Threads", 2);
            final Task snpTask = rp.post(new SnpWorker(percent, num));
            snpTask.addTaskListener(new TaskListener() {

                @Override
                public void taskFinished(org.openide.util.Task task) {
                    firePropertyChange(PROP_SNPS_LOADED, null, snps);
                    snpTask.removeTaskListener(this);
                    searchButton.setEnabled(true);
                }
            });
            searchButton.setEnabled(false);
        } else {
            NotifyDescriptor nd = new NotifyDescriptor.Message(NbBundle.getMessage(SNP_Detection454SetupPanel.class, "MSG_SNP_DetectionSetupPanel454.error"), NotifyDescriptor.ERROR_MESSAGE);
            DialogDisplayer.getDefault().notify(nd);
        }

    }                                            

    private boolean isValidNumer(String num){
        try{
            int tmp = Integer.parseInt(num);
            if(tmp > 0){
                return true;
            } else {
                return false;
            }
        } catch (NumberFormatException ex){
            return false;
        } 
    }//GEN-LAST:event_searchButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField absNum;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JSpinner perVar;
    private javax.swing.JButton searchButton;
    // End of variables declaration//GEN-END:variables

public List<Snp> getSnps() {
        return snps;
    }

    public void setCon(ITrackConnector con) {
        this.con = con;
    }

}
