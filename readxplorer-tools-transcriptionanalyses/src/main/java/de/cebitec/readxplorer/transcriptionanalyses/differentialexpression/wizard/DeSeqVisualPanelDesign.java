/*
 * Copyright (C) 2014 Kai Bernd Stadermann <kstaderm at cebitec.uni-bielefeld.de>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package de.cebitec.readxplorer.transcriptionanalyses.differentialexpression.wizard;


import de.cebitec.readxplorer.databackend.dataobjects.PersistentTrack;
import java.util.List;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;


public final class DeSeqVisualPanelDesign extends JPanel {

    private DefaultTableModel tm;
    private final DefaultComboBoxModel cbm = new DefaultComboBoxModel( new Integer[]{ 1 } );


    /**
     * Creates new form DeSeqVisualPanelDesign
     */
    public DeSeqVisualPanelDesign() {
        initComponents();
    }


    @Override
    public String getName() {
        return "Experimental design";
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        addRowButton = new javax.swing.JButton();
        removeRow = new javax.swing.JButton();
        rowNumberSelection = new javax.swing.JComboBox();

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable2.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable2.setMaximumSize(new java.awt.Dimension(99999, 99999));
        jTable2.setMinimumSize(new java.awt.Dimension(490, 330));
        jTable2.setPreferredSize(new java.awt.Dimension(490, 334));
        jTable2.setRowSelectionAllowed(false);
        jScrollPane2.setViewportView(jTable2);

        org.openide.awt.Mnemonics.setLocalizedText(addRowButton, org.openide.util.NbBundle.getMessage(DeSeqVisualPanelDesign.class, "DeSeqVisualPanelDesign.addRowButton.text_1")); // NOI18N
        addRowButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRowButtonActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(removeRow, org.openide.util.NbBundle.getMessage(DeSeqVisualPanelDesign.class, "DeSeqVisualPanelDesign.removeRow.text_1")); // NOI18N
        removeRow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeRowActionPerformed(evt);
            }
        });

        rowNumberSelection.setModel(cbm);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 490, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addRowButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(removeRow)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rowNumberSelection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addRowButton)
                    .addComponent(removeRow)
                    .addComponent(rowNumberSelection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addRowButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addRowButtonActionPerformed
        String[] rowData = new String[tm.getColumnCount()];
        tm.addRow( rowData );
        cbm.addElement( tm.getRowCount() );
    }//GEN-LAST:event_addRowButtonActionPerformed

    private void removeRowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeRowActionPerformed
        int rowIndex = ((int) cbm.getSelectedItem()) - 1;
        tm.removeRow( rowIndex );
        cbm.removeElementAt( cbm.getSize() - 1 );
    }//GEN-LAST:event_removeRowActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addRowButton;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    private javax.swing.JButton removeRow;
    private javax.swing.JComboBox rowNumberSelection;
    // End of variables declaration//GEN-END:variables


    void setTracks( List<PersistentTrack> tracks ) {
        String[] columnNames = new String[tracks.size() + 1];
        columnNames[0] = "Group name";
        for( int i = 0; i < tracks.size(); i++ ) {
            String description = tracks.get( i ).getDescription();
            columnNames[i + 1] = description;
        }
        tm = new DefaultTableModel( columnNames, 1 );
        jTable2.setModel( tm );
    }


    Vector getTableData() {
        //If a cell is still selected when you click on "next" the input you
        //have done won't be used unless you change the edited cell first.
        //This is done automatically by this command.
        jTable2.editCellAt( -1, -1 );
        return tm.getDataVector();
    }


}
