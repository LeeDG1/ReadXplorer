/*
 * Copyright (C) 2015 tronic3
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package de.cebitec.readxplorer.ui.options;

import de.cebitec.readxplorer.utils.Properties;
import de.cebitec.readxplorer.utils.filechooser.ReadXplorerFileChooser;
import java.util.prefs.Preferences;
import javax.swing.JFileChooser;
import org.openide.util.NbPreferences;

final class DirectoriesPanel extends OptionsPanel {
    
    private static final long serialVersionUID = 1L;

    private final DirectoriesOptionsPanelController controller;
    private final Preferences pref;

    DirectoriesPanel(DirectoriesOptionsPanelController controller) {
        this.controller = controller;
        this.pref = NbPreferences.forModule( Object.class );
        initComponents();
        // TODO listen to changes in form fields and call controller.changed()
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tempImportDirLabel = new javax.swing.JLabel();
        tempImportDirField = new javax.swing.JTextField();
        chooseTmpImportDirButton = new javax.swing.JButton();

        org.openide.awt.Mnemonics.setLocalizedText(tempImportDirLabel, org.openide.util.NbBundle.getMessage(DirectoriesPanel.class, "DirectoriesPanel.tempImportDirLabel.text")); // NOI18N

        tempImportDirField.setEditable(false);
        tempImportDirField.setText(org.openide.util.NbBundle.getMessage(DirectoriesPanel.class, "DirectoriesPanel.tempImportDirField.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(chooseTmpImportDirButton, org.openide.util.NbBundle.getMessage(DirectoriesPanel.class, "DirectoriesPanel.chooseTmpImportDirButton.text")); // NOI18N
        chooseTmpImportDirButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseTmpImportDirButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tempImportDirLabel)
                        .addGap(0, 133, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tempImportDirField)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chooseTmpImportDirButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tempImportDirLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tempImportDirField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chooseTmpImportDirButton))
                .addContainerGap(177, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void chooseTmpImportDirButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseTmpImportDirButtonActionPerformed
        ReadXplorerFileChooser fc = new ReadXplorerFileChooser(null, null) {
            private static final long serialVersionUID = 1L;

            @Override
            public void save( String fileLocation ) {
                throw new UnsupportedOperationException( "Not supported." );
            }

            @Override
            public void open(String fileLocation) {

                // file chosen
                tempImportDirField.setText(fileLocation);
            }

        };

        fc.setDirectoryProperty( Properties.TMP_IMPORT_DIR );
        fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        fc.openFileChooser( ReadXplorerFileChooser.OPEN_DIALOG );
    }//GEN-LAST:event_chooseTmpImportDirButtonActionPerformed

    @Override
    void load() {
        tempImportDirField.setText( pref.get( Properties.TMP_IMPORT_DIR, System.getProperty("java.io.tmpdir") ) );
    }

    @Override
    void store() {
        pref.put( Properties.TMP_IMPORT_DIR, this.tempImportDirField.getText() );
    }

    @Override
    public boolean valid() {
        // TODO check whether form is consistent and complete
        return true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton chooseTmpImportDirButton;
    private javax.swing.JTextField tempImportDirField;
    private javax.swing.JLabel tempImportDirLabel;
    // End of variables declaration//GEN-END:variables
}
