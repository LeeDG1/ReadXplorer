package de.cebitec.readXplorer.view.analysis;

import de.cebitec.readXplorer.databackend.ResultTrackAnalysis;
import de.cebitec.readXplorer.view.tableVisualization.TablePanel;

/**
 * This panel is a basic result panel for showing a PersistantResult.
 * It shall be used for creating any kind of result panels for analysis 
 * functions.
 * 
 * @author Rolf Hilker <rhilker at cebitec.uni-bielefeld.de>
 */
public abstract class ResultTablePanel extends TablePanel {
    private static final long serialVersionUID = 1L;

    /**
     * This panel is a result panel for showing a PersistantResult. It shall be
     * used for creating any kind of result panels for analysis functions.
     */
    public ResultTablePanel() {
        initComponents();
    }
    
    /**
     * Adds the data from the given Result object to the data already
     * available in this result panel. All statistics etc. are also updated.
     * @param newResult the new result to add
     */
    public abstract void addResult(final ResultTrackAnalysis newResult);

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
