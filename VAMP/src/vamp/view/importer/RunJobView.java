package vamp.view.importer;

import vamp.importer.RunJob;
import java.util.ArrayList;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ddoppmeier
 */
public class RunJobView extends javax.swing.JPanel implements ListSelectionListener{

//    public static final long serialVersionUID = 221345123;
    private ImportSetupCard parent;
    private ArrayList<RunJob> runJobs;

    /** Creates new form TaskViewerTemplate */
    public RunJobView() {
        this.init();
    }

    public RunJobView(ImportSetupCard parent){
        this.parent = parent;
        this.init();
    }

    public RunJob getSelectedItem() {
        return runJobs.get(jTable1.getSelectedRow());
    }

    private void init(){
        initComponents();
        runJobs = new ArrayList<RunJob>();
    }

    public void add(RunJob runJob){
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.addRow(new Object[]{runJob.getFile().getName(), runJob.getDescription()});
        runJobs.add(runJob);
    }

    public void remove(RunJob runJob){
        int index = runJobs.indexOf(runJob);
        runJobs.remove(runJob);

        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.removeRow(index);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTable1.getSelectionModel().addListSelectionListener(this);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "File", "Description"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setFillsViewportHeight(true);
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 447, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void valueChanged(ListSelectionEvent e) {
        ListSelectionModel model = (ListSelectionModel) e.getSource();
        if(model.isSelectionEmpty()){
            parent.setRemoveButtonEnabled(false);
        } else {
            parent.setRemoveButtonEnabled(true);
        }
    }

    public boolean IsRowSelected(){
        ListSelectionModel model = jTable1.getSelectionModel();
        return !model.isSelectionEmpty();
    }

}
