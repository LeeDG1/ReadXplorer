package vamp.view.dataVisualisation.trackViewer;

import vamp.view.dataVisualisation.basePanel.BasePanelFactory;
import vamp.view.dataVisualisation.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import vamp.databackend.dataObjects.PersistantTrack;
import vamp.view.dataVisualisation.BoundsInfoManager;
import vamp.view.dataVisualisation.readPosition.ReadFrame;
import vamp.view.dataVisualisation.snpDetection.SnpFrame;

/**
 *
 * @author ddoppmeier
 */
public class TrackOptionsPanel extends javax.swing.JPanel {

    private static final long serialVersionUID = 14234624;
    private ExternalViewer externalViewer;
    private SnpFrame snpDetection;
    private ReadFrame readPanel ;
    private BasePanelFactory basePanelFactory;
    private PersistantTrack track;
    private BoundsInfoManager boundsManager;

    /** Creates new form TrackNavigatorPanel */
    public TrackOptionsPanel() {
        initComponents();
        Logger.getLogger(this.getClass().getName()).log(Level.SEVERE, "Do not use empty Constructor for this object! Standard constructor is only meant for GUI builder means");

    }

    /** Creates new form TrackNavigatorPanel */
    public TrackOptionsPanel(BasePanelFactory basePanelFactory, PersistantTrack track, BoundsInfoManager boundsManager) {
        initComponents();
        this.basePanelFactory = basePanelFactory;
        this.track = track;
        this.boundsManager = boundsManager;
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        snpButton = new javax.swing.JButton();
        externalViewerButton = new javax.swing.JButton();
        readButton = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        snpButton.setText("Find SNPs");
        snpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                snpButtonActionPerformed(evt);
            }
        });

        externalViewerButton.setText("Open external viewer");
        externalViewerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                externalViewerButtonActionPerformed(evt);
            }
        });

        readButton.setText("Find Read");
        readButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(externalViewerButton, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                    .addComponent(snpButton, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                    .addComponent(readButton, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(snpButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(readButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(externalViewerButton)
                .addContainerGap(16, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void externalViewerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_externalViewerButtonActionPerformed
        externalViewerButton.setEnabled(false);
        externalViewer = new ExternalViewer(basePanelFactory, track, this);
        externalViewer.pack();
        externalViewer.setVisible(true);
    }//GEN-LAST:event_externalViewerButtonActionPerformed

    private void snpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_snpButtonActionPerformed
        snpDetection = new SnpFrame(this, boundsManager, track);
        snpDetection.pack();
        snpButton.setEnabled(false);
        snpDetection.setVisible(true);

    }//GEN-LAST:event_snpButtonActionPerformed

    private void readButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readButtonActionPerformed
       readPanel = new ReadFrame(this, boundsManager, track);
       readPanel.pack();
       readButton.setEnabled(false);
       readPanel.setVisible(true);
    }//GEN-LAST:event_readButtonActionPerformed


    public void snpDetectionClosed(){
        if(snpDetection != null){
            snpDetection.close();
            snpDetection.setVisible(false);
            snpDetection = null;
            snpButton.setEnabled(true);
        }
    }

    public void readDetecionClosed(){
        if(readPanel!= null){
            readPanel.close();
            readPanel.setVisible(false);
            readPanel = null;
            readButton.setEnabled(true);
        }
    }
    public void viewerClosed(){
        // if user is fast enough to double-click the close X before this frame
        // disappears, a null pointer will occur
        if(externalViewer != null){
            externalViewer.setVisible(false);
            externalViewer.close();
            externalViewer = null;
            externalViewerButton.setEnabled(true);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton externalViewerButton;
    private javax.swing.JButton readButton;
    private javax.swing.JButton snpButton;
    // End of variables declaration//GEN-END:variables

    public void close() {
        basePanelFactory = null;
        track = null;
        viewerClosed();
        snpDetectionClosed();
    }

}
