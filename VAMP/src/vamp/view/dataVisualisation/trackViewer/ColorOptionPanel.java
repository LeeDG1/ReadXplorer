/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 *   This file is part of ProSE.
 *   Copyright (C) 2007-2010 CeBiTec, Bielefeld University
 * 
 *   This program is free software: you can redistribute it and/or modify
 *   it under the terms of the GNU General Public License as published by
 *   the Free Software Foundation, either version 3 of the License, or
 *   (at your option) any later version.
 * 
 *   This program is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *   GNU General Public License for more details.
 * 
 *   You should have received a copy of the GNU General Public License
 *   along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

/*
 * ColorOptionPanel.java
 *
 * Created on 21.10.2010, 13:16:19
 */

package vamp.view.dataVisualisation.trackViewer;

import java.awt.Color;
import javax.swing.JCheckBox;
import javax.swing.JPanel;
import vamp.ColorProperties;

/**
 *
 * @author jstraube
 */
public class ColorOptionPanel extends javax.swing.JPanel{
    public Color choosenColor ;
    private TrackInfoPanel parent;
    /** Creates new form ColorOptionPanel */
    public ColorOptionPanel() {
        initComponents();
    }

    public ColorOptionPanel(TrackInfoPanel parent){
        this.parent = parent;

        initComponents();
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        uniqueColorationCheckBox = new javax.swing.JCheckBox();
        unqiueColorPanel = new javax.swing.JPanel();
        perfectMatchLabel = new javax.swing.JLabel();
        perfectMatchColorPanel = new javax.swing.JPanel();
        bestMatchLabel = new javax.swing.JLabel();
        bestMatchColorPanel = new javax.swing.JPanel();
        commonMatchLabel = new javax.swing.JLabel();
        commonMatchColorPanel = new javax.swing.JPanel();
        changeColorButton = new javax.swing.JButton();

        setMaximumSize(new java.awt.Dimension(221, 122));
        setPreferredSize(new java.awt.Dimension(221, 122));

        uniqueColorationCheckBox.setText("Unique coloration");
        uniqueColorationCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uniqueColorationCheckBoxActionPerformed(evt);
            }
        });

        unqiueColorPanel.setBackground(new java.awt.Color(51, 51, 255));
        unqiueColorPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        unqiueColorPanel.setMaximumSize(new java.awt.Dimension(30, 35));
        unqiueColorPanel.setPreferredSize(new java.awt.Dimension(30, 35));
        unqiueColorPanel.setRequestFocusEnabled(false);
        unqiueColorPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                unqiueColorPanelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout unqiueColorPanelLayout = new javax.swing.GroupLayout(unqiueColorPanel);
        unqiueColorPanel.setLayout(unqiueColorPanelLayout);
        unqiueColorPanelLayout.setHorizontalGroup(
            unqiueColorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 79, Short.MAX_VALUE)
        );
        unqiueColorPanelLayout.setVerticalGroup(
            unqiueColorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        perfectMatchLabel.setText("Perfect match");

        perfectMatchColorPanel.setBackground(new java.awt.Color(102, 255, 51));
        perfectMatchColorPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        perfectMatchColorPanel.setMaximumSize(new java.awt.Dimension(30, 35));
        perfectMatchColorPanel.setPreferredSize(new java.awt.Dimension(30, 35));
        perfectMatchColorPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                perfectMatchColorPanelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout perfectMatchColorPanelLayout = new javax.swing.GroupLayout(perfectMatchColorPanel);
        perfectMatchColorPanel.setLayout(perfectMatchColorPanelLayout);
        perfectMatchColorPanelLayout.setHorizontalGroup(
            perfectMatchColorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 79, Short.MAX_VALUE)
        );
        perfectMatchColorPanelLayout.setVerticalGroup(
            perfectMatchColorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 23, Short.MAX_VALUE)
        );

        bestMatchLabel.setText("Best match");

        bestMatchColorPanel.setBackground(new java.awt.Color(255, 255, 0));
        bestMatchColorPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        bestMatchColorPanel.setMaximumSize(new java.awt.Dimension(30, 35));
        bestMatchColorPanel.setPreferredSize(new java.awt.Dimension(30, 35));
        bestMatchColorPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bestMatchColorPanelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout bestMatchColorPanelLayout = new javax.swing.GroupLayout(bestMatchColorPanel);
        bestMatchColorPanel.setLayout(bestMatchColorPanelLayout);
        bestMatchColorPanelLayout.setHorizontalGroup(
            bestMatchColorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 79, Short.MAX_VALUE)
        );
        bestMatchColorPanelLayout.setVerticalGroup(
            bestMatchColorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 22, Short.MAX_VALUE)
        );

        commonMatchLabel.setText("Common match");

        commonMatchColorPanel.setBackground(new java.awt.Color(255, 51, 51));
        commonMatchColorPanel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        commonMatchColorPanel.setMaximumSize(new java.awt.Dimension(30, 35));
        commonMatchColorPanel.setPreferredSize(new java.awt.Dimension(30, 35));
        commonMatchColorPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                commonMatchColorPanelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout commonMatchColorPanelLayout = new javax.swing.GroupLayout(commonMatchColorPanel);
        commonMatchColorPanel.setLayout(commonMatchColorPanelLayout);
        commonMatchColorPanelLayout.setHorizontalGroup(
            commonMatchColorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 79, Short.MAX_VALUE)
        );
        commonMatchColorPanelLayout.setVerticalGroup(
            commonMatchColorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 22, Short.MAX_VALUE)
        );

        changeColorButton.setText("Change color");
        changeColorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeColorButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(bestMatchLabel))
                            .addComponent(uniqueColorationCheckBox)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(commonMatchLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(perfectMatchLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(perfectMatchColorPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                            .addComponent(bestMatchColorPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                            .addComponent(unqiueColorPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                            .addComponent(commonMatchColorPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(changeColorButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(unqiueColorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(perfectMatchColorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bestMatchColorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(uniqueColorationCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(perfectMatchLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bestMatchLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(commonMatchColorPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(commonMatchLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(changeColorButton)
                .addGap(33, 33, 33))
        );

        getAccessibleContext().setAccessibleParent(this);
    }// </editor-fold>//GEN-END:initComponents

    private void uniqueColorationCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uniqueColorationCheckBoxActionPerformed
        //ColorChooserPanel cp = new ColorChooserPanel(this, unqiueColorPanel);
    }//GEN-LAST:event_uniqueColorationCheckBoxActionPerformed

    private void unqiueColorPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_unqiueColorPanelMouseClicked
        ColorChooserFrame cp = new ColorChooserFrame(this,unqiueColorPanel);
    }//GEN-LAST:event_unqiueColorPanelMouseClicked

    private void commonMatchColorPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_commonMatchColorPanelMouseClicked
       ColorChooserFrame cp = new ColorChooserFrame(this,commonMatchColorPanel);
    }//GEN-LAST:event_commonMatchColorPanelMouseClicked

    private void bestMatchColorPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bestMatchColorPanelMouseClicked
       ColorChooserFrame cp = new ColorChooserFrame(this, bestMatchColorPanel);
    }//GEN-LAST:event_bestMatchColorPanelMouseClicked

    private void perfectMatchColorPanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_perfectMatchColorPanelMouseClicked
       ColorChooserFrame cp = new ColorChooserFrame(this, perfectMatchColorPanel);
    }//GEN-LAST:event_perfectMatchColorPanelMouseClicked

    private void changeColorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeColorButtonActionPerformed
        setColor();
        if(parent != null){
        parent.colorChanges();
        } else{
        parent = new TrackInfoPanel();
        parent.colorChanges();
        }
    }//GEN-LAST:event_changeColorButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bestMatchColorPanel;
    private javax.swing.JLabel bestMatchLabel;
    private javax.swing.JButton changeColorButton;
    private javax.swing.JPanel commonMatchColorPanel;
    private javax.swing.JLabel commonMatchLabel;
    private javax.swing.JPanel perfectMatchColorPanel;
    private javax.swing.JLabel perfectMatchLabel;
    private javax.swing.JCheckBox uniqueColorationCheckBox;
    private javax.swing.JPanel unqiueColorPanel;
    // End of variables declaration//GEN-END:variables

    public Color getBestMatchColor() {
        return bestMatchColorPanel.getBackground();
    }

    public Color getCommonMatchColor() {
        return commonMatchColorPanel.getBackground();
    }

    public Color getPerfectMatchColor() {
        return perfectMatchColorPanel.getBackground();
    }

    public JCheckBox getUniqueColorationCheckBox() {
        return uniqueColorationCheckBox;
    }

    public Color getUnqiueColor() {
        return unqiueColorPanel.getBackground();
    }
public void setColor(){
  ColorProperties c = new ColorProperties();
  if(uniqueColorationCheckBox.isSelected()){
     c.setColorProperties(getUnqiueColor(),getUnqiueColor() ,getUnqiueColor());
  }else{
    c.setColorProperties(getPerfectMatchColor(),getBestMatchColor() ,getCommonMatchColor());
    }
    }
}
