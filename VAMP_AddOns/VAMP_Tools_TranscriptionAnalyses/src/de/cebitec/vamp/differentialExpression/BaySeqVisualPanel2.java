/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package de.cebitec.vamp.differentialExpression;

import de.cebitec.vamp.databackend.dataObjects.PersistantTrack;
import java.util.Iterator;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JPanel;

public final class BaySeqVisualPanel2 extends JPanel {

    private List<PersistantTrack> selectedTraks = null;
    private DefaultListModel<PersistantTrack> trackListModel = new DefaultListModel<>();
    private int[] replicateStructure = new int[1];
    private int currentReplicateNumber = 1;

    /**
     * Creates new form bspVisualPanel2
     */
    public BaySeqVisualPanel2() {
        initComponents();
    }

    @Override
    public String getName() {
        return "Define replicates structure";
    }

    public void updateTrackList(List<PersistantTrack> selectedTraks) {
        if (this.selectedTraks == null) {
            this.selectedTraks = selectedTraks;
        }
        trackListModel.clear();
        for (Iterator<PersistantTrack> it = selectedTraks.iterator(); it.hasNext();) {
            PersistantTrack persistantTrack = it.next();
            trackListModel.addElement(persistantTrack);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        trackList = new javax.swing.JList(trackListModel);
        jLabel2 = new javax.swing.JLabel();
        replicateStructureField = new javax.swing.JTextField();
        addAsReplicates = new javax.swing.JButton();
        removeReplicates = new javax.swing.JButton();

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(BaySeqVisualPanel2.class, "BaySeqVisualPanel2.jLabel1.text")); // NOI18N

        jScrollPane1.setViewportView(trackList);

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(BaySeqVisualPanel2.class, "BaySeqVisualPanel2.jLabel2.text")); // NOI18N

        replicateStructureField.setEditable(false);
        replicateStructureField.setText(org.openide.util.NbBundle.getMessage(BaySeqVisualPanel2.class, "BaySeqVisualPanel2.replicateStructureField.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(addAsReplicates, org.openide.util.NbBundle.getMessage(BaySeqVisualPanel2.class, "BaySeqVisualPanel2.addAsReplicates.text")); // NOI18N
        addAsReplicates.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAsReplicatesActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(removeReplicates, org.openide.util.NbBundle.getMessage(BaySeqVisualPanel2.class, "BaySeqVisualPanel2.removeReplicates.text")); // NOI18N
        removeReplicates.setEnabled(false);
        removeReplicates.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeReplicatesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)
                    .addComponent(replicateStructureField)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addAsReplicates)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(removeReplicates)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addAsReplicates)
                    .addComponent(removeReplicates))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(replicateStructureField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addAsReplicatesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAsReplicatesActionPerformed
        if (replicateStructure.length<2) {
            replicateStructure = new int[selectedTraks.size()];
        }
        if (!trackList.isSelectionEmpty()) {
            List<PersistantTrack> tracks = trackList.getSelectedValuesList();
            StringBuilder strBuilder = new StringBuilder(replicateStructureField.getText() + "{");
            for (Iterator<PersistantTrack> it = tracks.iterator(); it.hasNext();) {
                PersistantTrack persistantTrack = it.next();
                replicateStructure[selectedTraks.indexOf(persistantTrack)] = currentReplicateNumber;
                strBuilder.append(persistantTrack.getDescription());
                trackListModel.removeElement(persistantTrack);
                if (it.hasNext()) {
                    strBuilder.append(",");
                } else {
                    strBuilder.append("}");
                }
            }
            replicateStructureField.setText(strBuilder.toString());
            currentReplicateNumber++;
        }
        removeReplicates.setEnabled(true);
        if (trackListModel.isEmpty()) {
            addAsReplicates.setEnabled(false);
        }
    }//GEN-LAST:event_addAsReplicatesActionPerformed

    private void removeReplicatesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeReplicatesActionPerformed
        removeReplicates.setEnabled(false);
        replicateStructureField.setText("");
        replicateStructure = new int[1];
        updateTrackList(selectedTraks);
        addAsReplicates.setEnabled(true);
    }//GEN-LAST:event_removeReplicatesActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addAsReplicates;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton removeReplicates;
    private javax.swing.JTextField replicateStructureField;
    private javax.swing.JList trackList;
    // End of variables declaration//GEN-END:variables

    public int[] getCreatedReplicates() {
        return replicateStructure;
    }

    public boolean noReplicatesCreated() {
        for (int i = 0; i < replicateStructure.length; i++) {
            if (replicateStructure[i] == 0) {
                return true;
            }
        }
        return false;
    }
}
