/*
 * SeqPairJobView.java
 *
 * Created on 18.05.2011, 14:57:49
 */
package de.cebitec.vamp.ui.importer;

import de.cebitec.vamp.parser.SeqPairJobContainer;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 * View for showing all sequence pair jobs ready for import.
 *
 * @author Rolf Hilker
 */
public class SeqPairJobView extends javax.swing.JPanel implements ListSelectionListener {

    public final static long serialVersionUID = 774342377;
    private List<SeqPairJobContainer> seqPairJobContainerList;
    private boolean hasJobs;

    /** View for showing all sequence pair jobs ready for import. */
    public SeqPairJobView() {
        seqPairJobContainerList = new ArrayList<>();
        initComponents();
    }

    /**
     * @return the selected seq pair job
     */
    public SeqPairJobContainer getSelectedItem() {
        return seqPairJobContainerList.get(seqPairJobTable.getSelectedRow());
    }

    /**
     * Add a new sequence pair job to the table view.
     * @param seqPairJobContainer the container with the job to add
     * @return the updated seq pair job table
     */
    public JTable add(SeqPairJobContainer seqPairJobContainer){
        DefaultTableModel model = (DefaultTableModel) seqPairJobTable.getModel();
        
        String orientation = "fr";
        if (     seqPairJobContainer.getOrientation() == 1){ orientation = "rf"; }
        else if (seqPairJobContainer.getOrientation() == 2){ orientation = "ff/rr"; }
        String file2Name = seqPairJobContainer.getTrackJob2().getFile() != null 
                ? seqPairJobContainer.getTrackJob2().getFile().getName() : "-";
       
        model.addRow(new Object[]{
                seqPairJobContainer.getTrackJob1().getFile().getName(),
                file2Name,
                seqPairJobContainer.getTrackJob1().getDescription(),
                seqPairJobContainer.getTrackJob1().getRefGen().getDescription(), 
                seqPairJobContainer.getDistance(),
                seqPairJobContainer.getDeviation(), 
                orientation});
        
        this.seqPairJobContainerList.add(seqPairJobContainer);

        if (!hasJobs){
            hasJobs = true;
            firePropertyChange(ImportSetupCard.PROP_HAS_JOBS, null, hasJobs);
        }
        return seqPairJobTable;
    }

    /**
     * Removes the selected sequence pair job.
     * @param seqPairJobContainer the container of the seq pair job to remove
     */
    public void remove(SeqPairJobContainer seqPairJobContainer){
        int index = seqPairJobContainerList.indexOf(seqPairJobContainer);
        seqPairJobContainerList.remove(seqPairJobContainer);

        DefaultTableModel model = (DefaultTableModel) seqPairJobTable.getModel();
        model.removeRow(index);

        if (seqPairJobContainerList.isEmpty()){
            hasJobs = false;
            firePropertyChange(ImportSetupCard.PROP_HAS_JOBS, null, hasJobs);
        }
    }

    /**
     * @return the list of sequence pair jobs
     */
    public List<SeqPairJobContainer> getJobs(){
        return seqPairJobContainerList;
    }

    @Override
    public void valueChanged(ListSelectionEvent e) {
        ListSelectionModel model = (ListSelectionModel) e.getSource();
        if(model.isSelectionEmpty()){
            firePropertyChange(ImportSetupCard.PROP_JOB_SELECTED, null, Boolean.FALSE);
        } else {
            firePropertyChange(ImportSetupCard.PROP_JOB_SELECTED, null, Boolean.TRUE);
        }
    }

    public boolean isRowSelected(){
        ListSelectionModel model = seqPairJobTable.getSelectionModel();
        return !model.isSelectionEmpty();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        seqPairJobTable = new javax.swing.JTable();
        seqPairJobTable.getSelectionModel().addListSelectionListener(this);

        seqPairJobTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "File 1", "File 2", "Description", "Reference", "Distance", "% Deviation", "Orientation"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        seqPairJobTable.setFillsViewportHeight(true);
        jScrollPane1.setViewportView(seqPairJobTable);
        seqPairJobTable.getColumnModel().getColumn(0).setHeaderValue(org.openide.util.NbBundle.getMessage(SeqPairJobView.class, "SeqPairJobView.seqPairJobTable.columnModel.title0")); // NOI18N
        seqPairJobTable.getColumnModel().getColumn(1).setHeaderValue(org.openide.util.NbBundle.getMessage(SeqPairJobView.class, "SeqPairJobView.trackTable.columnModel.title6")); // NOI18N
        seqPairJobTable.getColumnModel().getColumn(2).setHeaderValue(org.openide.util.NbBundle.getMessage(SeqPairJobView.class, "SeqPairJobView.trackTable.columnModel.title1")); // NOI18N
        seqPairJobTable.getColumnModel().getColumn(3).setHeaderValue(org.openide.util.NbBundle.getMessage(SeqPairJobView.class, "SeqPairJobView.trackTable.columnModel.title2")); // NOI18N
        seqPairJobTable.getColumnModel().getColumn(4).setHeaderValue(org.openide.util.NbBundle.getMessage(SeqPairJobView.class, "SeqPairJobView.trackTable.columnModel.title3")); // NOI18N
        seqPairJobTable.getColumnModel().getColumn(5).setHeaderValue(org.openide.util.NbBundle.getMessage(SeqPairJobView.class, "SeqPairJobView.trackTable.columnModel.title4")); // NOI18N
        seqPairJobTable.getColumnModel().getColumn(6).setHeaderValue(org.openide.util.NbBundle.getMessage(SeqPairJobView.class, "SeqPairJobView.trackTable.columnModel.title5")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable seqPairJobTable;
    // End of variables declaration//GEN-END:variables


}
