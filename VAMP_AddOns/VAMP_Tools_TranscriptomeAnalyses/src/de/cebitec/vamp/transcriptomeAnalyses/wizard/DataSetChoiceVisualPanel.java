/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package de.cebitec.vamp.transcriptomeAnalyses.wizard;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.prefs.Preferences;
import javax.swing.BorderFactory;
import javax.swing.JCheckBox;
import javax.swing.JPanel;
import org.openide.util.NbPreferences;

public final class DataSetChoiceVisualPanel extends JPanel implements ActionListener {


    private final String fiveprimeText = "";
    private final String wholeTranscriptText = "";
    private final String wizardName;
    
    /**
     * Creates new form DataSetChoiceVisualPanel
     */
    public DataSetChoiceVisualPanel(String wizardName) {
        initComponents();

        this.wizardName = wizardName;
        updateCheckBoxes();
        wholeTranscriptomeTrackCheckBox.addActionListener(this);
        wholeTranscriptomeTrackCheckBox.setActionCommand(TranscriptomeAnalysisWizardIterator.PROP_WHOLEGENOME_DATASET);
        fiveEnrichedTrackCheckBox.addActionListener(this);
        fiveEnrichedTrackCheckBox.setActionCommand(TranscriptomeAnalysisWizardIterator.PROP_FIVEPRIME_DATASET);
        
        wholeTranscriptTA.setEditable(false);
        wholeTranscriptTA.setBorder(BorderFactory.createTitledBorder("Whole transcript RNA-Seq data set"));
        wholeTranscriptTA.setText(fiveprimeText);
        fivePrimeTextArea.setEditable(false);
        fivePrimeTextArea.setBorder(BorderFactory.createTitledBorder("5'-Enriched RNA-Seq data set"));
        fivePrimeTextArea.setText(wholeTranscriptText);
    }

    @Override
    public String getName() {
        return "Data type selection";
    }

    public boolean isWholeGenomeTrack() {
        return this.wholeTranscriptomeTrackCheckBox.isSelected();
    }

    public boolean isFiveEnrichedTrack() {
        return this.fiveEnrichedTrackCheckBox.isSelected();
    }

    /**
     * Updates the checkboxes for the read classes with the globally stored
     * settings for this wizard. If no settings were stored, the default
     * configuration is chosen.
     */
    private void updateCheckBoxes() {
        Preferences pref = NbPreferences.forModule(Object.class);
        this.wholeTranscriptomeTrackCheckBox.setSelected(pref.getBoolean(wizardName + TranscriptomeAnalysisWizardIterator.PROP_WHOLEGENOME_DATASET, false));
        this.fiveEnrichedTrackCheckBox.setSelected(pref.getBoolean(wizardName + TranscriptomeAnalysisWizardIterator.PROP_FIVEPRIME_DATASET, false));
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        wholeTranscriptTA = new javax.swing.JTextArea();
        wholeTranscriptomeTrackCheckBox = new javax.swing.JCheckBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        fivePrimeTextArea = new javax.swing.JTextArea();
        fiveEnrichedTrackCheckBox = new javax.swing.JCheckBox();

        wholeTranscriptTA.setColumns(20);
        wholeTranscriptTA.setRows(5);
        wholeTranscriptTA.setText(org.openide.util.NbBundle.getMessage(DataSetChoiceVisualPanel.class, "DataSetChoiceVisualPanel.wholeTranscriptTA.text")); // NOI18N
        jScrollPane1.setViewportView(wholeTranscriptTA);

        org.openide.awt.Mnemonics.setLocalizedText(wholeTranscriptomeTrackCheckBox, org.openide.util.NbBundle.getMessage(DataSetChoiceVisualPanel.class, "DataSetChoiceVisualPanel.wholeTranscriptomeTrackCheckBox.text")); // NOI18N

        fivePrimeTextArea.setColumns(20);
        fivePrimeTextArea.setRows(5);
        fivePrimeTextArea.setText(org.openide.util.NbBundle.getMessage(DataSetChoiceVisualPanel.class, "DataSetChoiceVisualPanel.fivePrimeTextArea.text")); // NOI18N
        jScrollPane2.setViewportView(fivePrimeTextArea);

        org.openide.awt.Mnemonics.setLocalizedText(fiveEnrichedTrackCheckBox, org.openide.util.NbBundle.getMessage(DataSetChoiceVisualPanel.class, "DataSetChoiceVisualPanel.fiveEnrichedTrackCheckBox.text")); // NOI18N
        fiveEnrichedTrackCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fiveEnrichedTrackCheckBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(131, 131, 131)
                                .addComponent(wholeTranscriptomeTrackCheckBox))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(134, 134, 134)
                                .addComponent(fiveEnrichedTrackCheckBox)))
                        .addGap(0, 159, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(wholeTranscriptomeTrackCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(fiveEnrichedTrackCheckBox)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void fiveEnrichedTrackCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fiveEnrichedTrackCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fiveEnrichedTrackCheckBoxActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox fiveEnrichedTrackCheckBox;
    private javax.swing.JTextArea fivePrimeTextArea;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea wholeTranscriptTA;
    private javax.swing.JCheckBox wholeTranscriptomeTrackCheckBox;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getActionCommand().equals(TranscriptomeAnalysisWizardIterator.PROP_WHOLEGENOME_DATASET)) {
            if (((JCheckBox) e.getSource()).isSelected()) {
                fiveEnrichedTrackCheckBox.setSelected(false);
            }
        }

        if (e.getActionCommand().equals(TranscriptomeAnalysisWizardIterator.PROP_FIVEPRIME_DATASET)) {
            if (((JCheckBox) e.getSource()).isSelected()) {
                wholeTranscriptomeTrackCheckBox.setSelected(false);
            }
        }
    }
}
