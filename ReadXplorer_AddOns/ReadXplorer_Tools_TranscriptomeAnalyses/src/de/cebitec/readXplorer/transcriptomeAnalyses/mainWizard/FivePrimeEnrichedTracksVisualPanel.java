package de.cebitec.readXplorer.transcriptomeAnalyses.mainWizard;

import java.util.prefs.Preferences;
import javax.swing.BorderFactory;
import javax.swing.JPanel;
import org.openide.util.NbPreferences;

public final class FivePrimeEnrichedTracksVisualPanel extends JPanel {

    public static final String ACTION_COMMAND_TSSCHECKBOX = "tssCheck";
    private String tssDetectionText = "Leaderless and antisense detection is based on\n the transcriptional start site detection (TSS). That is why "
            + "you have to choose at least TSS-detection. ...";
    private final String wizardName;
    
    /**
     * Creates new form FivePrimeEnrichedTracksVisualPanel
     */
    public FivePrimeEnrichedTracksVisualPanel(String wizardName) {
        initComponents();
        updateCheckBoxes();
        this.wizardName = wizardName;
        jScrollPane1.setBorder(BorderFactory.createTitledBorder("TSS-detection"));
        jTextArea1.setEditable(false);
        jTextArea1.setText(tssDetectionText);
    }

    @Override
    public String getName() {
        return "Analyses for 5'-enriched Tracks";
    }

    public boolean isTSSSelected() {
        return tssCheckBox.isSelected();
    }

    public boolean isAntisenseSelected() {
        return antisenseCheckBox.isSelected();
    }

    public boolean isPutativeUnAnnoSelected() {
        return this.putUnAnnotatedCB.isSelected();
    }
    
        /**
     * Updates the checkboxes for the read classes with the globally stored
     * settings for this wizard. If no settings were stored, the default
     * configuration is chosen.
     */
    private void updateCheckBoxes() {
        Preferences pref = NbPreferences.forModule(Object.class);
        this.tssCheckBox.setSelected(pref.getBoolean(wizardName+TranscriptomeAnalysisWizardIterator.PROP_TSS_ANALYSIS, true));
        this.antisenseCheckBox.setSelected(pref.getBoolean(wizardName+TranscriptomeAnalysisWizardIterator.PROP_ANTISENSE_ANALYSIS, false));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        tssCheckBox = new javax.swing.JCheckBox();
        antisenseCheckBox = new javax.swing.JCheckBox();
        putUnAnnotatedCB = new javax.swing.JCheckBox();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        org.openide.awt.Mnemonics.setLocalizedText(tssCheckBox, org.openide.util.NbBundle.getMessage(FivePrimeEnrichedTracksVisualPanel.class, "FivePrimeEnrichedTracksVisualPanel.tssCheckBox.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(antisenseCheckBox, org.openide.util.NbBundle.getMessage(FivePrimeEnrichedTracksVisualPanel.class, "FivePrimeEnrichedTracksVisualPanel.antisenseCheckBox.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(putUnAnnotatedCB, org.openide.util.NbBundle.getMessage(FivePrimeEnrichedTracksVisualPanel.class, "FivePrimeEnrichedTracksVisualPanel.putUnAnnotatedCB.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tssCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(antisenseCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(putUnAnnotatedCB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tssCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(putUnAnnotatedCB)
                        .addGap(3, 3, 3)
                        .addComponent(antisenseCheckBox))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox antisenseCheckBox;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JCheckBox putUnAnnotatedCB;
    private javax.swing.JCheckBox tssCheckBox;
    // End of variables declaration//GEN-END:variables

}
